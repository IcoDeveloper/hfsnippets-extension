{
	"JavaScript Starting Point": {
		"prefix": "hf-js",
		"body": [
			"/* ESLint no-undef-rule: define globals to prevent ESLint errors */",
            "/* global WinJS HybridForms Promise HFFormdefinition $ */",
            "",
            "(function () {",
                "\t'use strict'; // forcing browser to strict mode JavaScript",
            "",
                "\tWinJS.Namespace.define('HFFormdefinition.${1:SomeNamespace}', {",
                    "\t\t${2:doSomethingOnChange}: function(value) {",
                        "\t\t\tconsole.log('value: ', value);",
                        "\t\t\tconsole.log('ctrl: ', this);",
                    "\t\t},",
                "\t});",
                "",
                "\tWinJS.Utilities.markSupportedForProcessing(HFFormdefinition.${1:SomeNamespace}.${2:doSomethingOnChange});",
            "})();",
            "//# sourceURL=${1:filename}.js"
		],
		"description": "Custom Javascript starting point"
    },
    "JavaScript derived Custom Control": {
        "prefix": "hf-customcontrol",
		"body": [
			"${1:DerivedCustomControl}: WinJS.Class.derive(",
                "\tHybridForms.API.UIControls.BaseControl,",
                "\tfunction(element, options) {",
                    "\t\tHybridForms.API.UIControls.BaseControl.call(this, element, options);",
                "\t},",
                "\t{",
            "",
                    "\t\t_init: function(element) {",
                        "\t\t\tHybridForms.API.UIControls.BaseControl.prototype._init.call(this, element);",
                    "\t\t},",
            "",
                    "\t\tcreateControl: function() {",
                        "\t\t\treturn Promise.resolve();",
                    "\t\t},",
            "",
                    "\t\tregisterEvents: function() {",
                        "\t\t\tconsole.log('registerEvents');",
                    "\t\t},",
            "",
                    "\t\tdispose: function() {",
                        "\t\t\tif (this.disposed) {",
                            "\t\t\t\treturn;",
                        "\t\t\t}",
            "",
                        "\t\t\tthis.disposed = true;",
                    "\t\t}",
                "\t},",
                "\t{",
                    "\t\t//Static methods",
                "\t},",
            "),"
		],
		"description": "JavaScript derived Custom Control"
    },
    "Get and Set values": {
        "prefix": "hf-set",
        "body": [
            "const ${1:ctrl}Id = '${2:formcontrol_id}';",
            "const ${1:ctrl} = HybridForms.API.FormControls.getCtrl(${1:ctrl}Id);",
            "${1:ctrl}.val(${3});"
        ],
        "description": "Get and set values"
    },
    "Get a Control": {
        "prefix": "hf-ctrl",
        "body": [
            "const ${1:ctrl} = HybridForms.API.FormControls.getCtrl(${2:id});"
        ],
        "description": "Get a control"
    },
    "Get a Field": {
        "prefix": "hf-field",
        "body": [
            "const ${1:field} = HybridForms.API.Fields.getById(${2:id});"
        ],
        "description": "Get a field"
    },
    "Cope with RepeatingUnits": {
        "prefix": "hf-repeating",
        "body": [
            "let postfix = '';",
            "if (HybridForms.API.RepeatingUnits.isRepeatingUnit(${1:this.element})) {",
                "\tpostfix = HybridForms.API.RepeatingUnits.getPostfixFieldId(${1:this.element});",
            "}"
        ],
        "description": "Get post fix of a repeating unit"
    }
}